1.Write a blog on Difference between HTTP1.1 vs HTTP2?
Answer:
HTTP1.1: 
->It has multiple Tcp connection for every single element.
->This version presented considerable performance optimization over its precursors and changed how communication was handled between clients and servers.
->HTTP/1 was known to have poor response time. With websites becoming more resource-intensive, the protocol was losing its efficiency. It progressively became essential to minimize latency and boost page load speeds.
->HTTP/1.1 sends messages as plain text

HTTP2 : 
->It has only single Tcp connection even it has more number of elemnets.
->HTTP/2 is the second version of HTTP with most of the shortcomings of its predecessor addressed in it. It has come with advancements in efficiency, speed, and security. 
->HTTP/2 aims at simplifying, speeding up, and empowering the applications across the internet. To achieve the same, the protocol emphasizes on page load time, resource optimization, and round-trip time (RTT) reduction.
->HTTP/2 encodes them into binary data and arranges them carefully.


2.Write a blog about objects and its internal representation in Javascript
Answer:
->Objects are important data types in javascript. Objects are different than primitive datatypes (i.e. number, string, boolean, etc.). Primitive data types contain one value but Objects can hold many values in form of Key: value pair. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.
->Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. 
->Internally, JavaScript engines use various data structures to represent objects efficiently. One common approach is using a hash table or a similar structure to store the objectâ€™s properties and their corresponding values. This allows for fast access and manipulation of properties
